#!/bin/bash
# Script to safely decide whether to delete the current git branch
# Usage: ./cleanup-worktree
#
# Logic:
# 1. Check if branch has unique commits compared to main
# 2. If no unique commits -> safe to delete
# 3. If has unique commits -> check if PR is merged
# 4. If PR is merged -> safe to delete
# 5. Otherwise -> keep the branch (print reason)

set -e

# Get current branch name
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Don't delete main or master branches
if [ "$CURRENT_BRANCH" = "main" ] || [ "$CURRENT_BRANCH" = "master" ]; then
    echo "❌ Cannot delete main/master branch"
    exit 1
fi

echo "Checking if branch '$CURRENT_BRANCH' can be safely deleted..."
echo ""

# Check for uncommitted changes
if ! git diff-index --quiet HEAD 2>/dev/null; then
    echo "⚠ Warning: Uncommitted changes detected"
    echo "  These changes will not be preserved"
    echo ""
fi

# Check if branch has unique commits compared to main
UNIQUE_COMMITS=$(git rev-list origin/main.."$CURRENT_BRANCH" --count 2>/dev/null || echo "0")

if [ "$UNIQUE_COMMITS" = "0" ]; then
    echo "✓ No unique commits on this branch"
    echo "→ Safe to delete"
    WORKTREE_PATH=$(pwd)
    git checkout --detach origin/main
    git branch -D "$CURRENT_BRANCH"
    echo "✓ Deleted branch '$CURRENT_BRANCH'"
    git worktree remove "$WORKTREE_PATH"
    echo "✓ Deleted worktree at '$WORKTREE_PATH'"
    exit 0
fi

echo "Found $UNIQUE_COMMITS unique commit(s) on this branch"
echo "Checking if associated PR has been merged..."
echo ""

# Check if PR associated with this branch has been merged
PR_STATUS=$(gh pr list --state merged --head "$CURRENT_BRANCH" --json number,state,title --jq '.[0]' 2>/dev/null || echo "")

if [ -z "$PR_STATUS" ] || [ "$PR_STATUS" = "null" ]; then
    echo "❌ No merged PR found for this branch"
    echo "→ Keeping branch '$CURRENT_BRANCH' (has unmerged commits)"
    exit 0
fi

# Extract PR details
PR_NUMBER=$(echo "$PR_STATUS" | jq -r '.number')
PR_TITLE=$(echo "$PR_STATUS" | jq -r '.title')

echo "✓ Found merged PR #$PR_NUMBER: $PR_TITLE"
echo "→ Safe to delete"
WORKTREE_PATH=$(pwd)
git checkout --detach origin/main
git branch -D "$CURRENT_BRANCH"
echo "✓ Deleted branch '$CURRENT_BRANCH'"
git worktree remove "$WORKTREE_PATH"
echo "✓ Deleted worktree at '$WORKTREE_PATH'"